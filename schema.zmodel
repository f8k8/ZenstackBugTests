// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  
  employedBy CompanyUser[]
  properties PropertyUser[]
  companies Company[]

  @@allow('all', true)
}

model Company {
  id Int @id @default(autoincrement())
  name String
  
  companyUsers CompanyUser[]
  propertyUsers User[]
  properties Property[]

  @@allow('all', true)
}

model CompanyUser {
  company Company @relation(fields: [companyId], references: [id])
  companyId Int
  user User @relation(fields: [userId], references: [id])
  userId Int

  dummyField String

  @@id([companyId, userId])

  @@allow('all', true)
}

enum PropertyUserRoleType {
  Owner
  Administrator
}

model PropertyUserRole {
  id Int @id @default(autoincrement())
  type PropertyUserRoleType

  user PropertyUser @relation(fields: [userId], references: [id])
  userId Int

  @@allow('all', true)
}

model PropertyUser {
  id Int @id @default(autoincrement())
  dummyField String

  property Property @relation(fields: [propertyId], references: [id])
  propertyId Int
  user User @relation(fields: [userId], references: [id])
  userId Int

  roles PropertyUserRole[]
  
  @@unique([propertyId, userId])

  @@allow('all', true)
}

model Property {
  id Int @id @default(autoincrement())
  name String
  
  users PropertyUser[]
  company Company @relation(fields: [companyId], references: [id])
  companyId Int

  @@allow('all', true)
}
